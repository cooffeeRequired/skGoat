plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}
compileJava.options.encoding = 'UTF-8'

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'cz.coffee'
version = '1.0'
def testVersion = 'latest'


repositories {
    mavenCentral()
    mavenLocal()
    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    maven { url = 'https://oss.sonatype.org/content/groups/public/' }
    maven { url 'https://repo.skriptlang.org/releases' }
    maven { url 'https://mvnrepository.com/artifact/com.google.code.gson/gson' }
    maven { url 'https://mvnrepository.com/artifact/org.eclipse.jdt/org.eclipse.jdt.annotation' }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
}
dependencies {
    // Compile Only
    compileOnly "io.papermc.paper:paper-api:1.19.3-R0.1-SNAPSHOT"
    compileOnly 'org.projectlombok:lombok:1.18.24'
    compileOnly 'org.jetbrains:annotations:23.1.0'
    compileOnly 'com.github.SkriptLang:Skript:2.7.0-beta3'
    compileOnly 'commons-codec:commons-codec:1.15'
    implementation "net.kyori:adventure-api:4.12.0"


    /*
    net.minecraft.server
    compileOnly 'org.spigotmc:spigot-api:1.19.3-R0.1-SNAPSHOT' // The Spigot API with no shadowing. Requires the OSS repo.
    compileOnly 'org.spigotmc:spigot:1.19.3-R0.1-SNAPSHOT' // The full Spigot server with no shadowing. Requires mavenLocal..
     */


    //Implementation
    implementation group: 'org.eclipse.jdt', name: 'org.eclipse.jdt.annotation', version: '2.2.700'
    implementation group: 'org.yaml', name: 'snakeyaml', version: '2.0'

    testCompileOnly "io.papermc.paper:paper-api:1.19.3-R0.1-SNAPSHOT"
}
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ["-source", "16", "-target", "16"]
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}



//noinspection ConfigurationAvoidance
task release(type:Copy) {
    from jar
    [
            'C:\\Users\\nexti\\Desktop\\Project-SkJson\\envioroments\\2.9\\plugins'
    ]
            .each {destination ->
                into destination
            }
    def styler = 'black red green yellow blue magenta cyan white'
            .split().toList().withIndex(30)
            .collectEntries { key, val -> [(key) : { "\033[${val}m${it}\033[0m" }] }

    doLast {
        println "Message: ${styler['green']('new release was out of')} ${styler['yellow']('skGoat')}"
    }
}